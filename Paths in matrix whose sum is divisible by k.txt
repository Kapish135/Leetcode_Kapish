class Solution {
public:
    int mod = 1e9 + 7;
    int helper(int i,int j,vector<vector<int>>&grid,int k,int m,int n,int sum,vector<vector<vector<int>>>&dp)
    {
        if(i == m || j == n) return 0;

        sum += grid[i][j];
        int rem = sum % k;
        if(dp[i][j][rem] != -1) return dp[i][j][rem];
        if(i == m-1 && j == n-1){

            if(sum % k == 0) return 1;

            else return 0;
        }

        return dp[i][j][rem] = (helper(i+1,j,grid,k,m,n,sum,dp) +helper(i,j+1,grid,k,m,n,sum,dp))%mod;
    }
    
    int numberOfPaths(vector<vector<int>>& grid, int k) {
        int m = grid.size();
        int n = grid[0].size();
        int sum = 0;
        vector<vector<vector<int>>>dp(m,vector<vector<int>>(n,vector<int>(k,-1)));

        
        return helper(0,0,grid,k,m,n,sum,dp);
    }
};