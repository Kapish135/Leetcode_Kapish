class Solution {
public:
    int minReorder(int n, vector<vector<int>>& con) {
        map<int,vector<int>>m;
        set<pair<int,int>>s;
        for(auto a:con){
            s.insert({a[0],a[1]});
            m[a[0]].push_back(a[1]);
            m[a[1]].push_back(a[0]);
        }


        queue<int>q;
        q.push(0);
        int visited[n];
        for(int i= 0;i < n;i++) visited[i] = 0;
        int cnt = 0;
        while(!q.empty()){
            int top = q.front();

            q.pop();
            if(!visited[top]){
                visited[top] = true;

                for(int i = 0;i < m[top].size();i++){
                    q.push(m[top][i]);
                    if(!visited[m[top][i]] && s.find({top,m[top][i]}) != s.end()){
                        cnt++;
                    }
                }
            }
        }
        return cnt;
    }
};