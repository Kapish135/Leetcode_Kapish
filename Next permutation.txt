class Solution {
    public void nextPermutation(int[] nums) {
        int i;

        int n = nums.length;
        List<Integer>ls = new ArrayList<>();
        for(int a:nums) ls.add(a);
        for(i = n-2;i >=0;i--){
            if(ls.get(i) < ls.get(i+1)) break;
        }

        if(i < 0){
            Collections.reverse(ls);
            for(int j = 0;j < n;j++) nums[j] = ls.get(j);
            return;
        }

        int j;
        for(j = n-1;j >=0 ;j--){
            if(ls.get(j) > ls.get(i)) break;
        }

        Collections.swap(ls,i,j);
        int k = i + 1;
        j = n-1;
        while(k < j){
            Collections.swap(ls,k,j);
            k++;
            j--;
        }
        for(int l  =0;l < n;l++){
            nums[l] = ls.get(l);
        }
    }
}