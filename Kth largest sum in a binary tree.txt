class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        long long sum = 0;
        queue<TreeNode*>q;
        vector<long long>help;
        q.push(root);
        while(!q.empty()){
            long long curr_sum = 0;
            int size = q.size();
            for(int i=0;i < size;i++){
                TreeNode* curr = q.front();
                q.pop();
                curr_sum += curr->val;
                if(curr->left) q.push(curr->left);
                if(curr->right) q.push(curr->right); 
            }
            help.push_back(curr_sum);
        }
        if(help.size() < k) return -1;
        sort(help.begin(),help.end());
        return help[help.size() - k];
    }
};