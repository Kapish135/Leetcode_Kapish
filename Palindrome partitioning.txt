class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>>ans;
        vector<string>res;
        
        helper(0, s, ans, res);
        return ans;
    }
    
    void helper(int index, string s, vector<vector<string>>& ans,vector<string>&res){
        if(index == s.size()){
            ans.push_back(res);
            return;
        }
        
        for(int i = index;i < s.size();i++){
            if(isPallindrome(s , index, i )){
                res.push_back(s.substr(index,i-index + 1));
                helper(i+1,s,ans,res);
                res.pop_back();
            }
        }
    }
    bool isPallindrome(string s ,int start, int end){
        while(start <= end){
            if(s[start++] != s[end--])
                return false;
        }
        return true;
    }
};