class Solution {
public:
    unordered_map<int,vector<int>>map;
    bool dfs(int src,vector<bool>&vis,vector<bool>&pathVis){
        vis[src] = true;
        pathVis[src] = true;
        for(auto a:map[src]){
            if(vis[a] == false){
                if(dfs(a,vis,pathVis)) return true;
            }
            else if(pathVis[a]) return true;
        }
        pathVis[src] = false;
        return false;
    }
    bool canFinish(int numCourses, vector<vector<int>>& preq) {

        for(auto a:preq){
            // map[a[0]].push_back(a[1]);
            map[a[0]].push_back(a[1]);
        }
        vector<bool>vis(numCourses,false);
        vector<bool>pathVis(numCourses,false);
        for(int i = 0;i < numCourses;i++){
            if(!vis[i]){
                if(dfs(i,vis,pathVis) == true) return false;
            }
        }
        return true;
    }
};